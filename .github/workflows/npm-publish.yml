name: Release npm Package

on:
  pull-request:
    branches:
      - main
      - releases/*
  push:
    branches:
      - main
      - releases/*
    tags:
      - ‘v*.*.*’
  workflow_dispatch:
    inputs:
      commit:
        description: ‘The commit ID or branch name to build (default: latest commit in the main branch).’
      publish:
        description: ‘True to create a release and publish this to the registry (default: false)’

# Configuration: this is the registry to publish to (eg, https://registry.npmjs.org/
# for the public npm registry, and https://npm.pkg.github.com/ for GitHub Packages.
#
# The build node versions are an array of the node versions to build and test
# against to ensure compatibility.
#
# The publish node version (if specified) is the version of node to build and
# publish the package with.  The default is the current LTS. 
#
# The token is the authentication token to connect to the registry with.  If you use
# GitHub Packages, or if you have linked your npm package to your GitHub
# repository, then you do not need to specify a token.
#
# See https://docs.npmjs.com/package-linking for more information.
env:
  registry: ‘npmjs.com’
  build-node-versions: [ ‘12.x’, ‘14.x’, ‘15.x’ ]
  publish-node-version: ‘14’
  token: ‘’

jobs:
  # Build and test this package across multiple node versions.
  build:
    runs-on: ubuntu-latest
    strategy: matrix
      node-version: ${{ env.build-node-versions }}
    steps:
      # Download the repository at the commit that we want to build.
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.commit }}
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node
      - run: |
          npm ci
          npm run build --if-present
          npm test

  # If the build and test jobs passed, and this workflow is running because a
  # tag was pushed or because the user asked to do a release in the workflow
  # dispatch event, then publish this release.
  publish-release:
    needs: [ build ]
    if: github.event.inputs.publish == ‘true’ || github.event_name == ‘tag’

    steps:
      # Download the repository at the commit that we want to build.
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.commit }}
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.publish-node-version }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node

      # Publish this package to the npm registry and drafts a corresponding
      # GitHub release.  The package will be added as an artifact to the release.
      - uses: actions/publish-npm@v1
        with:
          registry: ${{ env.registry }} # registry to publish to; defaults to npmjs.com
          token: ${{ env.token }}       # token to authenticate with; defaults to GITHUB_TOKEN
          create-release: ‘draft’       # true/false/draft (default to draft)
          tag_name: ‘’                  # tag for the release, defaults to version number
