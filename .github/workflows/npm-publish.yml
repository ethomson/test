name: Release npm Package

on:
  pull-request:
    branches:
      - main
      - releases/*
  push:
    branches:
      - main
      - releases/*
    tags:
      - ‘v*.*.*’
  workflow_dispatch:
    inputs:
      commit:
        description: 'The commit ID or branch name to build (default: latest commit in the main branch).'
      publish:
        description: 'True to create a release and publish this to the registry (default: false)'

env:
  registry: 'npmjs.com'
  build-node-versions: [ '12.x', '14.x', '15.x' ]
  publish-node-version: '14'
  token: ''

jobs:
  # Build and test this package across multiple node versions.
  build:
    runs-on: ubuntu-latest
    strategy: matrix
      node-version: [ '12.x', '14.x', '15.x' ]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.commit }}
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
          npm ci
          npm run build --if-present
          npm test

  # Publish the package when a tag is pushed or you run a workflow dispatch event.
  # A GitHub release will be drafted linking to the published package.
  publish-release:
    needs: [ build ]
    if: github.event.inputs.publish == 'true' || github.event_name == 'tag'

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.commit }}
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.publish-node-version }}
      - run: |
          npm ci
          npm run build --if-present

      - uses: actions/publish-npm@v1
        with:
          registry: ${{ env.registry }} # registry to publish to; defaults to npmjs.com
          token: ${{ env.token }}       # token to authenticate with; defaults to GITHUB_TOKEN
          create-release: 'draft'       # true/false/draft (default to draft)
          tag_name: ''                  # tag for the release, defaults to version number
